cmake_minimum_required(VERSION 2.6)
project(trajOptWrapper)

IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    IF(${PROJECT_SOURCE_DIR} MATCHES "^.*gt70.*$")
        set(TIGER_DIR "/home/gt70/GAO")
        set(FANCYMODE "ON")
        set(SNOPTDIR "snopt7")
    ELSE()
        set(TIGER_DIR "/home/motion/GAO")
        set(FANCYMODE "ON")
        set(SNOPTDIR "snopt7")
    ENDIF()
ELSE()
    set(TIGER_DIR "/Users/GAO/Documents/Program")
    set(SNOPTDIR "snopt7")
ENDIF()
set(SNOPTPATH "${TIGER_DIR}/ThirdPartyLibs/${SNOPTDIR}")
set(lf2c f2c m)
set(SNPINC ${SNOPTPATH}/include)
set(SNPLIB snopt_cpp ${snobj} snopt7 snblas snprint7 gfortran ${lf2c})
set(SNPLIBPATH ${SNOPTPATH}/lib)
set(JSONOBJ jsoncpp yaml-cpp)
set(SNPOBJ "")

set(INCDIR "${TIGER_DIR}/CommonHeaders")
set(LIBDIR "${TIGER_DIR}/CommonLibs")
set(HDF5Lib "-lhdf5_cpp -lhdf5")

set(CMAKE_CXX_FLAGS "-std=c++11")
set(CMAKE_CXX_STANDARD 11)

set(COMLIB minpack tigertools tools)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Script)
set(CMAKE_BUILD_DIRECTORY ${PROJECT_SOURCE_DIR}/Build)

include_directories(${INCDIR})
include_directories(${JSONINC})
include_directories(${SNPINC})
include_directories(${PROJECT_SOURCE_DIR}/include)
link_directories(${LIBDIR})
link_directories(${SNPLIBPATH})
link_directories(/usr/lib)
link_directories(/usr/local/lib)

include_directories("/usr/local/include/python2.7")
include_directories("/usr/include/python2.7")
include_directories("/usr/local/include/eigen3")
include_directories("/usr/include/eigen3")
set(server_FILES
    src/toyfunction.cpp src/solverwrapper.cpp
    include/snoptWrapper.h include/toyfunction.hh)
add_library(server SHARED ${server_FILES})
target_link_libraries(server python2.7 ${JSONOBJ} ${COMLIB} ${SNPLIB})

install(TARGETS snopt
    DESTINATION ${PROJECT_SOURCE_DIR}/Script)
